&НаКлиенте
Процедура ПроцедурыПриИзменении(Элемент)
	
	
	ПроцедурыПриИзмененииСервер();
КонецПроцедуры

&НаСервере
Процедура ПроцедурыПриИзмененииСервер()
	
	ХранилищеНастроекДанныхФорм.Сохранить("Объект", "Запросы", РеквизитФормыВЗначение("Запросы"));

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Попытка
		ЗначениеВРеквизитФормы(ХранилищеНастроекДанныхФорм.Загрузить("Объект", "Запросы"),"Запросы");
	Исключение
		Сообщить("не получилоз загрузить предыдущие версии");
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКонсольЗапросов(Команда)
	ТекСтрока = ЭтаФорма.Элементы.Запросы.ТекущиеДанные;
  	Текст = ?(ПустаяСтрока(ТекСтрока.ТекстЗапроса),"выбрать 1",ТекСтрока.ТекстЗапроса);
	КЗ = Новый КонструкторЗапроса(Текст);
	КЗ.Показать(Новый ОписаниеОповещения("ОбновитьЗапрос",ЭтаФорма));	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗапрос(Текст,ДП) Экспорт
	Если Текст <> Неопределено тогда
		ТекСтрока = ЭтаФорма.Элементы.Запросы.ТекущиеДанные;
		ТекСтрока.ТекстЗапроса = Текст;
		ПроцедурыПриИзмененииСервер();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗапросНаСервере(знач ТекстЗапроса,знач ПараметрыЗапроса)                            
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Для Каждого П из ПараметрыЗапроса Цикл
		Запрос.УстановитьПараметр(п.Имя,п.значение);	
	КонецЦикла;
	РезультатВ = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	Результат.Очистить();
	
	РеквизитыНаУдаление = ДобавленныеТаблицы.ВыгрузитьЗначения();
	Для Каждого Стр из РеквизитыНаУдаление Цикл
		Эл = Элементы.Найти(Стр);
		Если Эл <> Неопределено Тогда
			Элементы.Удалить(Элементы.Найти(Стр));
		КонецЕсли;
	КонецЦикла;
	
	ДобавленныеТаблицы.Очистить();
	
	Инд = 0;
	ДобавляемыеРеквизиты = Новый Массив;
	Для Каждого р из РезультатВ Цикл	
		
		ДобавленныеТаблицы.Добавить("_"+инд);
		//Построитель = Новый ПостроительОтчета;
		//Построитель.ИсточникДанных  = Новый ОписаниеИсточникаДанных(р);
		//Построитель.Вывести(Результат);
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("_"+инд,Новый ОписаниеТипов("ТаблицаЗначений")));
		
		Для Каждого Ст ИЗ Р.Колонки Цикл
			Если не ст.ТипЗначения = Новый ОписаниеТипов("РезультатЗапроса") Тогда
				ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(Ст.Имя, Ст.ТипЗначения, "_"+инд));
			КонецЕсли;
		КонецЦикла;
		
		Инд = Инд + 1;
	КонецЦикла;
	
		
	ИзменитьРеквизиты(ДобавляемыеРеквизиты,РеквизитыНаУдаление);
	//ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	
	Инд = 0;
	Для Каждого р из РезультатВ Цикл	
				
		Таб = Элементы.Добавить("_"+инд, Тип("ТаблицаФормы"),ПолучитьВкладку("__"+инд,Инд));
		Таб.ПутьКДанным = "_"+инд;
		
		// запретим менять положение строк и сами строки, отключим командную панель
		Таб.ИзменятьСоставСтрок = Ложь;
		Таб.ИзменятьПорядокСтрок = Ложь;
		//Таб.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
		Таб.ТолькоПросмотр = Истина;
		Таб.Доступность=Истина;
		Таб.УстановитьДействие("Выбор", "ОткрытьЗначениеЯчейки" );
		Для Каждого Ст ИЗ р.Колонки Цикл
			Если не ст.ТипЗначения = Новый ОписаниеТипов("РезультатЗапроса") Тогда
				Рек = Элементы.Добавить("_"+инд+"Колонка" + Ст.Имя, Тип("ПолеФормы"), Таб);
				Рек.Вид = ВидПоляФормы.ПолеВвода;
				Рек.ПутьКДанным = "_"+инд + "." + Ст.Имя;
				Рек.Заголовок = Ст.Имя;
				
				Рек.КнопкаОткрытия = Истина; 
				рек.Доступность=Истина;
			КонецЕсли;
		КонецЦикла;
		ЗначениеВРеквизитФормы(Р.Выгрузить(),"_"+инд);
		
		Инд = Инд + 1;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
процедура ОткрытьЗначениеЯчейки(ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	ПоказатьЗначение(,ВыбраннаяСтрока.ТекущиеДанные[ВыбраннаяСтрока.ТекущийЭлемент.Заголовок]);	
КонецПроцедуры

&НаСервере
Функция ПолучитьВкладку(Имя,Заголовок)
	Эл = ЭтаФорма.Элементы.Найти(Имя);
	Если Эл = Неопределено Тогда 
		Эл = Элементы.Добавить(Имя,Тип("ГруппаФормы"),ЭтаФорма.Элементы.СтраницыРезультатов);
		Эл.Заголовок = Заголовок;
	КонецЕсли;
	Возврат Эл;
КонецФункции

&НаКлиенте
Процедура ВыполнитьЗапрос(Команда)
	ТекСтрока = ЭтаФорма.Элементы.Запросы.ТекущиеДанные;
	//Попытка
		ВыполнитьЗапросНаСервере(ТекСтрока.ТекстЗапроса,  ТекСтрока.Параметры);
	//Исключение
	//КонецПопытки;
КонецПроцедуры

&НаСервере
Функция ЗаполнитьПараметрыНаСервере(знач ТекстЗапроса)
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	С = Новый Соответствие;
	пп = запрос.НайтиПараметры();
	Для Каждого п из пп цикл
		С.Вставить(п.имя,п.ТипЗначения);
	КонецЦикла;
	
	Возврат с; 
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПараметры(Команда)
	ТекСтрока = ЭтаФорма.Элементы.Запросы.ТекущиеДанные;
  	ТекСтрока.Параметры.очистить();
	пп = ЗаполнитьПараметрыНаСервере(ТекСтрока.ТекстЗапроса);
	
	Для каждого п из пп цикл
		сп = ТекСтрока.Параметры.добавить();
		сп.Имя = п.Ключ;
		сп.Типы = п.Значение;
	КонецЦикла;
КонецПроцедуры


&НаСервере
Процедура СписокЗапросовНаСервере()
	Элемент = Элементы.Запросы;
	Если Элемент.Родитель = Элементы.СписокЗапросов Тогда		
		Элементы.Переместить(Элемент,Элементы.Призрак);
	Иначе
		Элементы.Переместить(Элемент,Элементы.СписокЗапросов);
	КонецЕсли;
	// Вставить содержимое обработчика.
КонецПроцедуры


&НаКлиенте
Процедура СписокЗапросов(Команда)
	СписокЗапросовНаСервере();
КонецПроцедуры


&НаКлиенте
Процедура ПереключитьВидимостьПараметров(Команда)
	ПереключитьВидимостьЭлементы(Элементы.ПараметрыГруппа)	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьВидимостьЭлементы(Элемент)
	Элемент.Видимость = Не Элемент.Видимость;
КонецПроцедуры


&НаКлиенте
Процедура ПереключитьВидимостьТекста(Команда)
	ПереключитьВидимостьЭлементы(Элементы.ТекстЗапроса)
КонецПроцедуры


&НаКлиенте
Процедура ПереключитьВидимостьРезультата(Команда)
	ПереключитьВидимостьЭлементы(Элементы.Результатэ)
КонецПроцедуры


&НаКлиенте
Процедура ОткрытьКонсольЗапросов1(Команда)
	ОткрытьФорму("ВнешняяОбработка.ИнструментыРазработчика_УФ.Форма.КонструкторЗапросов");
КонецПроцедуры


&НаКлиенте
Процедура ЗапросыПараметрыПриАктивизацииСтроки(Элемент)
	Попытка 
		ЭлементФормы = Элементы.ЗапросыПараметрыЗначение;
		ЭлементФормы.ДоступныеТипы = ЭтаФорма.Элементы.ЗапросыПараметры.ТекущиеДанные.Типы;
		ЭлементФормы.ОграничениеТипа = ЭтаФорма.Элементы.ЗапросыПараметры.ТекущиеДанные.Типы;
		ЭлементФормы.СписокВыбора.ТипЗначения = ЭтаФорма.Элементы.ЗапросыПараметры.ТекущиеДанные.Типы;
	Исключение
	КонецПопытки;
КонецПроцедуры




